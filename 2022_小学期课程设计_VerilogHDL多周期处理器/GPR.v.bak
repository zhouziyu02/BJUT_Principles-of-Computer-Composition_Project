module GPR(clk, reset, rs, rt, rw, wd, regwrite, busA, busB, addi_overflow);
  input clk, reset, regwrite;
  input [4:0] rs, rt, rw;
  input [31:0] wd;
  output [31:0] busA, busB;
  input addi_overflow;
  reg [31:0] reggroup[31:0];
  
  always @ (posedge clk, posedge reset)
  begin:rep
    integer i;
    if (reset)
      for (i = 0; i < 32; i = i + 1)
        reggroup[i] = 32'h0000_0000;
    else
      if (addi_overflow && regwrite)
        reggroup[30] = 1;
      else if (regwrite && rw)
        reggroup[rw] = wd;
  end
  
  assign busA = reggroup[rs];
  assign busB = reggroup[rt];
endmodule